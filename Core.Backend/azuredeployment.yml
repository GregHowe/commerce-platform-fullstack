trigger:
    branches:
        include:
            - main
            - development            
    paths:
        include:
            - Core.Backend
            - Core.CoreLib
pr: none

pool:
    vmImage: windows-latest

steps:
  - task: UseDotNet@2
    inputs:
      version: "6.x"
      includePreviewVersions: true # Required for preview versions

  - task: DotNetCoreCLI@2
    displayName: "dotnet build"
    inputs:
      command: "build"
      configuration: $(buildConfiguration)
  #- task: DotNetCoreCLI@2
  #  displayName: 'dotnet test'
  #  inputs:
  #    command: 'test'
  #    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
  #    publishTestResults: true
  #    projects: 'MyTestLibrary' # update with your test project directory

  #- task: PublishCodeCoverageResults@1
  #  displayName: 'Publish code coverage report'
  #  inputs:
  #    codeCoverageTool: 'Cobertura'
  #    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True
  - task: PublishPipelineArtifact@1
    inputs:
      artifact: 'DotnetBuild-$(build.BuildId)'
      targetPath: '$(build.ArtifactStagingDirectory)'
      publishLocation: 'pipeline'    